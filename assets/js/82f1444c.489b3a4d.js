"use strict";(self.webpackChunkdocusaurus_docs=self.webpackChunkdocusaurus_docs||[]).push([[384],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),h=a,g=p["".concat(s,".").concat(h)]||p[h]||d[h]||o;return n?i.createElement(g,r(r({ref:t},c),{},{components:n})):i.createElement(g,r({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var u=2;u<o;u++)r[u]=n[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8393:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var i=n(7462),a=n(3366),o=(n(7294),n(3905)),r=["components"],l={title:"How to Build a Powerful Logging Platform Using Native Kibana and ClickHouse",author:"CKibana-Team",keywords:["CKibana"],description:"How to Build a Powerful Logging Platform Using Native Kibana and ClickHouse",tags:["CKibana"]},s=void 0,u={permalink:"/ckibana-docs/en/blog/build-logging-platform-with-native-kibana-and-clickhouse",source:"@site/blog/en/build-logging-platform-with-native-kibana-and-clickhouse.md",title:"How to Build a Powerful Logging Platform Using Native Kibana and ClickHouse",description:"How to Build a Powerful Logging Platform Using Native Kibana and ClickHouse",date:"2024-08-27T03:45:13.776Z",formattedDate:"August 27, 2024",tags:[{label:"CKibana",permalink:"/ckibana-docs/en/blog/tags/c-kibana"}],readingTime:10.19,truncated:!0,authors:[{name:"CKibana-Team"}]},c={authorsImageUrls:[void 0]},d=[{value:"1  Background Introduction",id:"1--background-introduction",children:[],level:2},{value:"2 Solution Introduction",id:"2-solution-introduction",children:[],level:2},{value:"3 How to Use CKibana",id:"3-how-to-use-ckibana",children:[{value:"Components",id:"components",children:[],level:3},{value:"Getting Started",id:"getting-started",children:[{value:"Launching CKibana",id:"launching-ckibana",children:[],level:4},{value:"Kibana Configuration",id:"kibana-configuration",children:[],level:4},{value:"Configuring ClickHouse Connection Information and Index Whitelist",id:"configuring-clickhouse-connection-information-and-index-whitelist",children:[],level:4},{value:"Configure the index to switch to ClickHouse",id:"configure-the-index-to-switch-to-clickhouse",children:[],level:4},{value:"Create index pattern",id:"create-index-pattern",children:[],level:4},{value:"Here we go",id:"here-we-go",children:[],level:4}],level:3},{value:"Advanced Features",id:"advanced-features",children:[{value:"Sampling",id:"sampling",children:[],level:4},{value:"Time Rounding + Caching",id:"time-rounding--caching",children:[],level:4},{value:"Query Monitoring + Blacklisting",id:"query-monitoring--blacklisting",children:[],level:4},{value:"Query TimeRange Limits",id:"query-timerange-limits",children:[],level:4},{value:"keyword Query",id:"keyword-query",children:[],level:4},{value:"Discover Performance Optimization",id:"discover-performance-optimization",children:[],level:4}],level:3}],level:2},{value:"4 Usage scenarios: Nginx logs",id:"4-usage-scenarios-nginx-logs",children:[{value:"Clickhouse Table",id:"clickhouse-table",children:[],level:4},{value:"CKibana Configuration",id:"ckibana-configuration",children:[],level:4},{value:"Use Cases",id:"use-cases",children:[],level:4}],level:2},{value:"4 Benefits",id:"4-benefits",children:[],level:2},{value:"5 Finally",id:"5-finally",children:[],level:2}],p={toc:d};function h(e){var t=e.components,n=(0,a.Z)(e,r);return(0,o.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This article will introduce how to build a powerful logging platform based on native Kibana and Clickhouse.")),(0,o.kt)("p",null,"In the rapid development of business, the need to query and analyze various types of log data has caused a sharp increase in log storage scale. Traditional ELK and log systems based on ElasticSearch subsequently encounter many challenges in cost, stability, and performance. Increasingly, companies worldwide, such as Ctrip, Kuaishou, Bilibili, Cloudflare, and Uber, are switching their storage solutions to ClickHouse, experiencing significant benefits. Our log system has also begun migrating from ElasticSearch to ClickHouse, exploring and developing a comprehensive solution that fully caters to existing users' habits for a smooth transition."),(0,o.kt)("h2",{id:"1--background-introduction"},"1  Background Introduction"),(0,o.kt)("p",null,"Since migrating from ElasticSearch to ClickHouse in 2020, our company's largest log system has experienced significant enhancements in cost-efficiency and stability. During the National Day period this year, it seamlessly managed over 500 billion logs daily, while reducing expenses to merely 30% of what was previously spent on the ElasticSearch solution."),(0,o.kt)("p",null,"In addition to this primary log system, our company operates several other logging systems, predominantly utilizing the open-source ELK stack. However, as these systems have scaled up, we've encountered escalating costs and stability challenges. Consequently, we are planning to transition the storage foundation of all logging systems to Clickhouse."),(0,o.kt)("p",null,"The industry has broadly discussed and shared insights on selecting and using Clickhouse for logging scenarios. However, this article will not focus on those details. For those interested, we encourage you to conduct your own research to find more in-depth information."),(0,o.kt)("p",null,"After switching to Clickhouse for log storage, the primary concern becomes enhancing the query UI user experience. Although many companies have developed custom query UIs after migrating to Clickhouse, ensuring a smooth transition that respects users' familiar habits from Kibana poses a significant challenge. This necessitates users to learn new syntax and UI interactions, inadvertently leading to substantial costs."),(0,o.kt)("p",null,"Thus, enabling users to transition to a new platform without incurring any learning costs is a particularly challenging issue."),(0,o.kt)("h2",{id:"2-solution-introduction"},"2 Solution Introduction"),(0,o.kt)("p",null,"Our approach is actually quite simple and intuitive. We decided to insert an extra proxy layer between native Kibana and Elasticsearch. This proxy is responsible for the syntax translation between Elasticsearch and ClickHouse:\n",(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana02.png",alt:"Untitled"})),(0,o.kt)("p",null,"We developed our own Proxy (dubbed CKibana), which translates chart requests into ClickHouse syntax, fetches results from ClickHouse, and then simulates an Elasticsearch response to return to Kibana. This allows us to directly display data from ClickHouse in the native Kibana interface. Beyond syntax translation, we also tackled many real-world challenges."),(0,o.kt)("p",null,"Considering the limitations of ClickHouse's query concurrency capabilities, we retained Elasticsearch. This Elasticsearch can be used for advanced features such as result caching and storing metadata related to Kibana, and it is very lightweight."),(0,o.kt)("h2",{id:"3-how-to-use-ckibana"},"3 How to Use CKibana"),(0,o.kt)("h3",{id:"components"},"Components"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Kibana: Used to provide a UI display for business purposes."),(0,o.kt)("li",{parentName:"ol"},"ElasticSearch: Used for storing Kibana metadata and for query caching among other advanced features."),(0,o.kt)("li",{parentName:"ol"},"ClickHouse: The storage system where the actual log data is stored."),(0,o.kt)("li",{parentName:"ol"},"CKibana: Provides Proxy and other advanced functionalities, enabling users to query ClickHouse data directly on the native Kibana.")),(0,o.kt)("h3",{id:"getting-started"},"Getting Started"),(0,o.kt)("h4",{id:"launching-ckibana"},"Launching CKibana"),(0,o.kt)("p",null,"To start using CKibana, you'll first need to configure it with the necessary Elasticsearch details."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana03.png",alt:"Untitled"})),(0,o.kt)("p",null,"Once you have your configuration set up, ensure that you have JDK 17 or higher installed on your system for CKibana to run. You can then launch CKibana with the following command:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"java -jar ckibana.jar")),(0,o.kt)("h4",{id:"kibana-configuration"},"Kibana Configuration"),(0,o.kt)("p",null,"To modify the Kibana configuration, change the Elasticsearch address to the CKibana address\uff1a\n",(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana04.png",alt:"Untitled"})),(0,o.kt)("p",null,"At this point, Kibana is fully functional and can use CKibana as an Elasticsearch Proxy\uff1a\n",(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana05.png",alt:"Untitled"})),(0,o.kt)("h4",{id:"configuring-clickhouse-connection-information-and-index-whitelist"},"Configuring ClickHouse Connection Information and Index Whitelist"),(0,o.kt)("p",null,"Set up the ClickHouse connection:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"curl --location --request POST 'localhost:8080/config/updateCk?url=ckUrl&user=default&pass=default&defaultCkDatabase=ops'")),(0,o.kt)("h4",{id:"configure-the-index-to-switch-to-clickhouse"},"Configure the index to switch to ClickHouse"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"curl --location --request POST 'localhost:8080/config/updateWhiteIndexList?list=index1,index2'")),(0,o.kt)("p",null,"The corresponding relationship between field types in ElasticSearch and ClickHouse is as follows:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"es"),(0,o.kt)("th",{parentName:"tr",align:null},"ck"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"keyword"),(0,o.kt)("td",{parentName:"tr",align:null},"String")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"text"),(0,o.kt)("td",{parentName:"tr",align:null},"String")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ip"),(0,o.kt)("td",{parentName:"tr",align:null},"String(support ipv4 and ipv6)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"integer"),(0,o.kt)("td",{parentName:"tr",align:null},"Int32")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"long"),(0,o.kt)("td",{parentName:"tr",align:null},"Int64")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"float"),(0,o.kt)("td",{parentName:"tr",align:null},"Float32")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"double"),(0,o.kt)("td",{parentName:"tr",align:null},"Float64")))),(0,o.kt)("h4",{id:"create-index-pattern"},"Create index pattern"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana06.png",alt:"Untitled"})),(0,o.kt)("p",null,"Key Points to Note:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"First, ensure that the input index pattern matches the ClickHouse table exactly; the index pattern and the ClickHouse table name must be an exact match."),(0,o.kt)("li",{parentName:"ol"},"If the corresponding table cannot be selected, you can troubleshoot based on the SQL in the CKibana logs to see if the corresponding table can be queried."),(0,o.kt)("li",{parentName:"ol"},"Pay attention to the time field; otherwise, the time field will not be selectable. The selection logic is as follows:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Fields of the Date type, such as DateTime64, will be considered as time types."),(0,o.kt)("li",{parentName:"ul"},'Field names containing "time", for example (@timestamp UInt64), will be considered as time types.')),(0,o.kt)("p",null,"In either of these two cases, if any one condition is met, the field will be considered a time field. If you are unable to select a time field, it's necessary to check whether the fields in the ClickHouse table comply with the matching logic."),(0,o.kt)("h4",{id:"here-we-go"},"Here we go"),(0,o.kt)("p",null,"After configuring the index pattern, you can now make full use of Kibana's visual analysis capabilities",(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana07.png",alt:"Untitled"})),(0,o.kt)("h3",{id:"advanced-features"},"Advanced Features"),(0,o.kt)("h4",{id:"sampling"},"Sampling"),(0,o.kt)("p",null,"Most of Kibana's charts focus on trends. When the result set is too large, it consumes more ClickHouse resources. We provide a sampling feature that ensures the chart trends are close to actual trends while effectively controlling the use of ClickHouse resources, especially when dealing with large datasets."),(0,o.kt)("p",null,"Note:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The corresponding ClickHouse table needs to be created according to the ck sampling table requirements.",(0,o.kt)("a",{parentName:"li",href:"https://clickhouse.com/docs/en/sql-reference/statements/select/sample"},"clickhouse sample")),(0,o.kt)("li",{parentName:"ul"},"If the sampling threshold is set too low, it can result in a significant difference between the reconstructed values and the true values. We have set our online sampling threshold to 5 million.")),(0,o.kt)("p",null,"Enabling sampling requires two steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Configure the tables to be sampled."),(0,o.kt)("li",{parentName:"ol"},"Update the sampling threshold. Sampling is triggered when the result set exceeds this threshold.")),(0,o.kt)("p",null,"Sampling logic: ",(0,o.kt)("inlineCode",{parentName:"p"},'Math.max(0.01, Double.parseDouble(String.format("%.5f", sampleParam.getSampleCountMaxThreshold() * 1.00 / sampleParam.getSampleTotalCount())))')),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana08.png",alt:"Untitled"})),(0,o.kt)("p",null,"Expanding the response from the rate limiter, you can see the sampling value."),(0,o.kt)("h4",{id:"time-rounding--caching"},"Time Rounding + Caching"),(0,o.kt)("p",null,"When an issue occurs online, a large number of SRE and business colleagues need to query the nginx logs for troubleshooting, and their query conditions are mostly the same. However, ClickHouse aims to achieve the best query performance by utilizing as many CPUs as possible for computations. This situation leads to ClickHouse's CPU usage spiking to full capacity. Moreover, under continuous retries by colleagues, the CPU cannot recover."),(0,o.kt)("p",null,"Therefore, we implemented a feature for time rounding + caching."),(0,o.kt)("p",null,"Time Rounding: For instance, setting rounding to 20s means that the second's precision in the query time conditions will be %20, effectively introducing a maximum delay of 20s for data queries.With time rounding in place, a large number of query conditions become identical. At this point, enabling result caching can significantly alleviate the pressure on ClickHouse."),(0,o.kt)("p",null,"Set up time rounding:\n",(0,o.kt)("inlineCode",{parentName:"p"},"curl --location --request POST 'localhost:8080/config/updateRoundAbleMinPeriod?roundAbleMinPeriod=20000' \u5355\u4f4dms")),(0,o.kt)("p",null,"Enable caching:\n",(0,o.kt)("inlineCode",{parentName:"p"},"curl --location --request POST 'localhost:8080/config/updateUseCache?useCache=true'"),"\n",(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana09.png",alt:"Untitled"})),(0,o.kt)("p",null,"Whether the cache is hit can be seen in the response structure."),(0,o.kt)("h4",{id:"query-monitoring--blacklisting"},"Query Monitoring + Blacklisting"),(0,o.kt)("p",null,"Kibana's query syntax is relatively flexible, but some queries can consume substantial resources from ClickHouse. Therefore, we have implemented monitoring for all queries and their execution times. This allows us to easily view which queries have been performed and set up blacklisting controls for them. By doing this, we can restrict queries that are not very efficient."),(0,o.kt)("p",null,"Enable monitoring:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"curl --location --request POST 'localhost:8080/config/updateEnableMonitoring?enableMonitoring=true'")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana10.png",alt:"Untitled"})),(0,o.kt)("p",null,"As shown in the figure above, we can monitor the details, syntax, and execution time of each query."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana11.png",alt:"Untitled"})),(0,o.kt)("p",null,"This allows us to leverage Kibana's powerful built-in chart features for more intuitive analysis."),(0,o.kt)("h4",{id:"query-timerange-limits"},"Query TimeRange Limits"),(0,o.kt)("p",null,"Often, when users want to view the latest trends based on certain conditions, they might directly query data for recent periods, such as the last 7 days. This can lead to significant resource consumption. To manage this, CKibana has implemented a maximum time range for queries, which helps in limiting usage and conserving resources."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"curl --location --request POST 'localhost:8080/config/updateMaxTimeRange?maxTimeRange=864000000' \u5355\u4f4dms")),(0,o.kt)("h4",{id:"keyword-query"},"keyword Query"),(0,o.kt)("p",null,"To better align with ElasticSearch usage conventions, a ",(0,o.kt)("inlineCode",{parentName:"p"},"field.keyword")," query is equivalent to an exact search on the field, whereas without .keyword it implies a fuzzy search."),(0,o.kt)("p",null,"For example, ",(0,o.kt)("inlineCode",{parentName:"p"},'host.keyword:"www.baidu.com"')," when translated into SQL becomes:",(0,o.kt)("inlineCode",{parentName:"p"},'host="www.baidu.com"'),"."),(0,o.kt)("h4",{id:"discover-performance-optimization"},"Discover Performance Optimization"),(0,o.kt)("p",null,"ClickHouse is highly suitable for analytical processing (AP) scenarios, particularly when large time spans are involved in queries. Traditional SQL commands like ",(0,o.kt)("inlineCode",{parentName:"p"},"select x from table where x order by time desc limit 10")," can lead to very low query performance and consume a significant amount of ClickHouse resources."),(0,o.kt)("p",null,"To address scenarios that involve trend graphs plus details, we have optimized performance to fully leverage ClickHouse's AP capabilities. This optimization involves splitting the execution into two steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Leveraging ClickHouse's aggregation capabilities to query the number of logs that meet the criteria per minute."),(0,o.kt)("li",{parentName:"ol"},"Based on the number of logs per minute, automatically trimming the log search time span. For instance, if the number of logs within a minute fulfills the requirement, then the query detail time span is automatically reduced to one minute.")),(0,o.kt)("p",null,"This feature of automatically trimming the query time leads to a significant improvement in the query performance of the Discover version and greatly optimizes CPU usage in ClickHouse."),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana15.png",alt:"Untitled"})),(0,o.kt)("p",null,"As illustrated above, a Discover query is divided into three SQL statements:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Determine whether sampling is needed"),(0,o.kt)("li",{parentName:"ol"},"Count the number of logs per minute"),(0,o.kt)("li",{parentName:"ol"},"Automatically trim the query time range")),(0,o.kt)("h2",{id:"4-usage-scenarios-nginx-logs"},"4 Usage scenarios: Nginx logs"),(0,o.kt)("h4",{id:"clickhouse-table"},"Clickhouse Table"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-CREATE",metastring:"TABLE bjops.ops_bjtlblog_local",TABLE:!0,"bjops.ops_bjtlblog_local":!0},"(\n`@timestamp` UInt64,\n`X-Request-Id` String,\n`addr` String,\n`ap_area` String,\n`byte` Int64,\n`bytes_recv` Int64,\n`Bbtes_sent` Int64,\n`content-type` String,\n`content_length` Int64,\n`crp` String,\n`csi` String,\n`cspanid` String,\n`difftime` Int32,\n`error_body` String,\n`error_client` String,\n`error_host` String,\n`error_request` String,\n`error_server` String,\n`error_upstream` String,\n`forwarded` String,\n`host` String,\n`hostname` String,\n`idc` LowCardinality(String),\n`index_name` LowCardinality(String),\n`ip` String,\n`logant_idc` LowCardinality(String),\n`logant_type` LowCardinality(String),\n`origin_ip` String,\n`referer` String,\n`remote_port` String,\n`request_method` LowCardinality(String),\n`request_time` Int64,\n`request_uri` String,\n`request_url` String,\n`scheme` String,\n`server_addr` String,\n`server_name` String,\n`server_port` String,\n`server_protocol` String,\n`source` String,\n`sspanid` String,\n`st` String,\n`status` Int32,\n`timeuse` Float64,\n`traceid` String,\n`type` String,\n`ua` String,\n`up_addr` String,\n`up_status` Int32,\n`upstream_name` String,\n`upstream_response_time` Int32,\n`worker_pid` String,\n`ck_assembly_extension` String,\n`bytes_sent` Int64,\nINDEX timestamp_index `@timestamp` TYPE minmax GRANULARITY 8192\n)\nENGINE = MergeTree\nPARTITION BY (toYYYYMMDD(toDateTime(`@timestamp` / 1000, 'Asia/Shanghai')), toHour(toDateTime(`@timestamp` / 1000, 'Asia/Shanghai')))\nORDER BY (host, request_uri, intHash64(`@timestamp`))\nSAMPLE BY intHash64(`@timestamp`)\nSETTINGS in_memory_parts_enable_wal = 0, index_granularity = 8192\n")),(0,o.kt)("p",null,"Always place ",(0,o.kt)("inlineCode",{parentName:"p"},"host")," at the first position in the ORDER BY clause, as most Nginx log queries require sorting based on the ",(0,o.kt)("inlineCode",{parentName:"p"},"host"),"."),(0,o.kt)("h4",{id:"ckibana-configuration"},"CKibana Configuration"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n    "Proxy": {\n        "ck": {\n            "url": "ip:6321",\n            "user": "user",\n            "pass": "pass",\n            "defaultCkDatabase": "db"\n        },\n        "es": {\n            "host": "ip:31940"\n        },\n        "roundAbleMinPeriod": 120000,\n        "round": 20000,\n        "maxTimeRange": 86400000,\n        "blackIndexList": null,\n        "whiteIndexList": ["ops_bjtlblog_all", "other_index_all"],\n        "enableMonitoring": true\n    },\n    "query": {\n        "sampleIndexPatterns": ["ops_bjtlblog_all"],\n        "sampleCountMaxThreshold": 5000000,\n        "useCache": true,\n        "maxResultRow": 30000\n    },\n    "threadPool": {\n        "msearchProperty": {\n            "coreSize": 4,\n            "queueSize": 10000\n        },\n        "commonProperty": {\n            "coreSize": 4,\n            "queueSize": 10000\n        }\n    },\n    "defaultShard": 2\n}\n')),(0,o.kt)("h4",{id:"use-cases"},"Use Cases"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana12.png",alt:"Untitled"})),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://oss.17usoft.com/infra-github/ckibana13.png",alt:"Untitled"})),(0,o.kt)("h2",{id:"4-benefits"},"4 Benefits"),(0,o.kt)("p",null,"As of now, by leveraging CKibana's core capabilities, we have successfully completed the full migration of all Nginx access logs and business-customized logs from Elasticsearch to Clickhouse, reducing our storage costs to below 30% of the original. Moreover, thanks to ClickHouse's distributed table capabilities, log queries remain unaffected even in the event of a single center failure, offering significant improvements over Elasticsearch in both cost and stability. We have also continued to use the flexible and powerful native Kibana as our visualization tool, allowing users to conveniently perform log queries and analyses using their familiar Kibana dashboard."),(0,o.kt)("h2",{id:"5-finally"},"5 Finally"),(0,o.kt)("p",null,"Our logging system's continuous evolution owes much to numerous outstanding open-source projects. Having proven stable and reliable internally, we're now excited to open-source the CKibana project. We also look forward to collaborating with the community to continuously enhance its functionality, fully leveraging the Kibana visualization and ClickHouse storage combination for log analysis."),(0,o.kt)("p",null,"Github Repo: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/TongchengOpenSource/ckibana/"},"https://github.com/TongchengOpenSource/ckibana/")),(0,o.kt)("p",null,"We hope you find it useful and welcome your feedback. Thanks~"))}h.isMDXComponent=!0}}]);